### Swift dependencies file v0 ###
provides-top-level:
- "DMFormula"
provides-nominal:
- "11DataManager9DMFormulaV"
- "11DataManager9DMFormulaV14NCFormulaErrorO"
provides-member:
- ["Sd", ""]
- ["Si", ""]
- ["11DataManager9DMFormulaV", ""]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", ""]
- ["Sd", "init"]
- ["Sd", "init"]
- ["Si", "init"]
- ["Si", "init"]
depends-top-level:
- !private "!"
- !private "*"
- !private "+"
- !private "-"
- !private "/"
- "<"
- "<="
- "=="
- ">"
- ">="
- !private "Array"
- "AssignmentPrecedence"
- "Bool"
- !private "BooleanLiteralType"
- !private "CalcFunction"
- "CalcOperator"
- "CaseIterable"
- "Character"
- "Comparable"
- "DMFormula"
- "DMScanner"
- !private "DataManagerError"
- "Double"
- "ExpressibleByStringLiteral"
- "ExtendedGraphemeClusterType"
- "FloatLiteralType"
- "Int"
- "Int8"
- "IntegerLiteralType"
- "LocalizedError"
- !private "NCFormulaError"
- "String"
- "StringLiteralType"
- "UnicodeScalarType"
- !private "_findStringSwitchCase"
- !private "abs"
- !private "acos"
- !private "asin"
- !private "atan"
- !private "atan2"
- !private "ceil"
- !private "cos"
- !private "degree"
- !private "execLastOperator"
- !private "exp"
- !private "floor"
- !private "get2Values"
- !private "getValue"
- !private "hypot"
- !private "log10"
- !private "makeChild"
- !private "max"
- !private "min"
- !private "operators"
- !private "pow"
- !private "pushValue"
- !private "radian"
- !private "round"
- !private "scanOperator"
- !private "scanValue"
- !private "scanner"
- !private "sin"
- !private "sqrt"
- !private "tan"
- !private "values"
- !private "variables"
- !private "||"
- !private "~="
depends-member:
- !private ["s18AdditiveArithmeticP", "DMFormula"]
- !private ["s18AdditiveArithmeticP", "DataManagerError"]
- !private ["s18AdditiveArithmeticP", "Double"]
- !private ["s18AdditiveArithmeticP", "Int"]
- !private ["s18AdditiveArithmeticP", ""]
- !private ["s18AdditiveArithmeticP", "init"]
- !private ["s18AdditiveArithmeticP", "isInfinite"]
- !private ["s18AdditiveArithmeticP", "isNaN"]
- !private ["s18AdditiveArithmeticP", "isZero"]
- !private ["s18AdditiveArithmeticP", "pi"]
- !private ["s18AdditiveArithmeticP", "truncatingRemainder"]
- !private ["Sa", "append"]
- !private ["Sa", "isEmpty"]
- !private ["Sa", "last"]
- !private ["Sa", "popLast"]
- !private ["SK", ""]
- !private ["SK", "append"]
- !private ["SK", "callAsFunction"]
- !private ["SK", "dropTailSpaces"]
- !private ["SK", "fetchCharacter"]
- !private ["SK", "init"]
- !private ["SK", "isAtEnd"]
- !private ["SK", "isEmpty"]
- !private ["SK", "isFirstLetter"]
- !private ["SK", "last"]
- !private ["SK", "popLast"]
- !private ["SK", "scanCharacter"]
- !private ["SK", "scanDouble"]
- !private ["SK", "scanParen"]
- !private ["SK", "scanString"]
- !private ["SK", "testCharacter"]
- !private ["SK", "uppercased"]
- !private ["SB", "DMFormula"]
- !private ["SB", "init"]
- !private ["SB", "isInfinite"]
- !private ["SB", "isNaN"]
- !private ["SB", "isZero"]
- !private ["SB", "pi"]
- !private ["SB", "truncatingRemainder"]
- !private ["Sz", "DataManagerError"]
- !private ["Sz", "Double"]
- !private ["Sz", "Int"]
- !private ["Sz", ""]
- !private ["Sz", "init"]
- !private ["s7CVarArgP", "DMFormula"]
- !private ["s7CVarArgP", "DataManagerError"]
- !private ["s7CVarArgP", "Double"]
- !private ["s7CVarArgP", "Int"]
- !private ["s7CVarArgP", ""]
- !private ["s7CVarArgP", "init"]
- !private ["s7CVarArgP", "isInfinite"]
- !private ["s7CVarArgP", "isNaN"]
- !private ["s7CVarArgP", "isZero"]
- !private ["s7CVarArgP", "pi"]
- !private ["s7CVarArgP", "truncatingRemainder"]
- ["s12CaseIterableP", "=="]
- ["s12CaseIterableP", "AllCases"]
- ["s12CaseIterableP", "Default_AllCases"]
- ["s12CaseIterableP", "Default_RawValue"]
- ["s12CaseIterableP", "Element"]
- ["s12CaseIterableP", "RawValue"]
- !private ["s12CaseIterableP", ""]
- ["s12CaseIterableP", "_Default_AllCases"]
- ["s12CaseIterableP", "_Default_RawValue"]
- !private ["s12CaseIterableP", "_findStringSwitchCase"]
- ["s12CaseIterableP", "_rawHashValue"]
- !private ["s12CaseIterableP", "abs"]
- !private ["s12CaseIterableP", "acos"]
- ["s12CaseIterableP", "allCases"]
- !private ["s12CaseIterableP", "asin"]
- !private ["s12CaseIterableP", "atan"]
- !private ["s12CaseIterableP", "atan2"]
- !private ["s12CaseIterableP", "ceil"]
- !private ["s12CaseIterableP", "cos"]
- !private ["s12CaseIterableP", "degree"]
- !private ["s12CaseIterableP", "exec"]
- !private ["s12CaseIterableP", "exp"]
- !private ["s12CaseIterableP", "findStringSwitchCase"]
- !private ["s12CaseIterableP", "floor"]
- ["s12CaseIterableP", "func_abs"]
- ["s12CaseIterableP", "func_acos"]
- ["s12CaseIterableP", "func_asin"]
- ["s12CaseIterableP", "func_atan"]
- ["s12CaseIterableP", "func_atan2"]
- ["s12CaseIterableP", "func_ceil"]
- ["s12CaseIterableP", "func_cos"]
- ["s12CaseIterableP", "func_exp"]
- ["s12CaseIterableP", "func_floor"]
- ["s12CaseIterableP", "func_hypot"]
- ["s12CaseIterableP", "func_log"]
- ["s12CaseIterableP", "func_max"]
- ["s12CaseIterableP", "func_min"]
- ["s12CaseIterableP", "func_pow"]
- ["s12CaseIterableP", "func_round"]
- ["s12CaseIterableP", "func_sin"]
- ["s12CaseIterableP", "func_sqrt"]
- ["s12CaseIterableP", "func_tan"]
- !private ["s12CaseIterableP", "get2Values"]
- !private ["s12CaseIterableP", "getValue"]
- ["s12CaseIterableP", "hash"]
- ["s12CaseIterableP", "hashValue"]
- !private ["s12CaseIterableP", "hypot"]
- ["s12CaseIterableP", "init"]
- !private ["s12CaseIterableP", "log10"]
- !private ["s12CaseIterableP", "max"]
- !private ["s12CaseIterableP", "min"]
- !private ["s12CaseIterableP", "pow"]
- !private ["s12CaseIterableP", "radian"]
- ["s12CaseIterableP", "rawValue"]
- !private ["s12CaseIterableP", "round"]
- !private ["s12CaseIterableP", "sin"]
- !private ["s12CaseIterableP", "sqrt"]
- !private ["s12CaseIterableP", "tan"]
- !private ["Sl", ""]
- !private ["Sl", "append"]
- !private ["Sl", "callAsFunction"]
- !private ["Sl", "dropTailSpaces"]
- !private ["Sl", "fetchCharacter"]
- !private ["Sl", "init"]
- !private ["Sl", "isAtEnd"]
- !private ["Sl", "isEmpty"]
- !private ["Sl", "isFirstLetter"]
- !private ["Sl", "last"]
- !private ["Sl", "popLast"]
- !private ["Sl", "scanCharacter"]
- !private ["Sl", "scanDouble"]
- !private ["Sl", "scanParen"]
- !private ["Sl", "scanString"]
- !private ["Sl", "subscript"]
- !private ["Sl", "testCharacter"]
- !private ["Sl", "uppercased"]
- ["SL", "<"]
- ["SL", "<="]
- ["SL", "=="]
- ["SL", ">"]
- ["SL", ">="]
- !private ["SL", "DMFormula"]
- !private ["SL", "DataManagerError"]
- ["SL", "Default_RawValue"]
- !private ["SL", "Double"]
- !private ["SL", "Int"]
- ["SL", "RawValue"]
- !private ["SL", ""]
- ["SL", "_Default_RawValue"]
- ["SL", "_rawHashValue"]
- !private ["SL", "callAsFunction"]
- ["SL", "div"]
- ["SL", "hash"]
- ["SL", "hashValue"]
- ["SL", "init"]
- !private ["SL", "isEmpty"]
- !private ["SL", "isFirstOp"]
- !private ["SL", "isInfinite"]
- !private ["SL", "isNaN"]
- !private ["SL", "isZero"]
- !private ["SL", "map"]
- ["SL", "minus"]
- ["SL", "mod"]
- ["SL", "mul"]
- !private ["SL", "pi"]
- ["SL", "plus"]
- !private ["SL", "priority"]
- ["SL", "rawValue"]
- !private ["SL", "truncatingRemainder"]
- !private ["SL", "uppercased"]
- !private ["10Foundation15ContiguousBytesP", "append"]
- !private ["10Foundation15ContiguousBytesP", "isEmpty"]
- !private ["10Foundation15ContiguousBytesP", "last"]
- !private ["10Foundation15ContiguousBytesP", "popLast"]
- !private ["s28CustomDebugStringConvertibleP", "DMFormula"]
- !private ["s28CustomDebugStringConvertibleP", "append"]
- !private ["s28CustomDebugStringConvertibleP", "callAsFunction"]
- !private ["s28CustomDebugStringConvertibleP", "init"]
- !private ["s28CustomDebugStringConvertibleP", "isEmpty"]
- !private ["s28CustomDebugStringConvertibleP", "isInfinite"]
- !private ["s28CustomDebugStringConvertibleP", "isNaN"]
- !private ["s28CustomDebugStringConvertibleP", "isZero"]
- !private ["s28CustomDebugStringConvertibleP", "last"]
- !private ["s28CustomDebugStringConvertibleP", "pi"]
- !private ["s28CustomDebugStringConvertibleP", "popLast"]
- !private ["s28CustomDebugStringConvertibleP", "subscript"]
- !private ["s28CustomDebugStringConvertibleP", "truncatingRemainder"]
- !private ["s28CustomDebugStringConvertibleP", "uppercased"]
- !private ["s17CustomReflectableP", "DMFormula"]
- !private ["s17CustomReflectableP", "DataManagerError"]
- !private ["s17CustomReflectableP", "Double"]
- !private ["s17CustomReflectableP", "Int"]
- !private ["s17CustomReflectableP", "append"]
- !private ["s17CustomReflectableP", "callAsFunction"]
- !private ["s17CustomReflectableP", "init"]
- !private ["s17CustomReflectableP", "isEmpty"]
- !private ["s17CustomReflectableP", "isInfinite"]
- !private ["s17CustomReflectableP", "isNaN"]
- !private ["s17CustomReflectableP", "isZero"]
- !private ["s17CustomReflectableP", "last"]
- !private ["s17CustomReflectableP", "pi"]
- !private ["s17CustomReflectableP", "popLast"]
- !private ["s17CustomReflectableP", "subscript"]
- !private ["s17CustomReflectableP", "truncatingRemainder"]
- !private ["s17CustomReflectableP", "uppercased"]
- !private ["s23CustomStringConvertibleP", "DMFormula"]
- !private ["s23CustomStringConvertibleP", "DataManagerError"]
- !private ["s23CustomStringConvertibleP", "Double"]
- !private ["s23CustomStringConvertibleP", "Int"]
- !private ["s23CustomStringConvertibleP", ""]
- !private ["s23CustomStringConvertibleP", "append"]
- !private ["s23CustomStringConvertibleP", "callAsFunction"]
- !private ["s23CustomStringConvertibleP", "init"]
- !private ["s23CustomStringConvertibleP", "isEmpty"]
- !private ["s23CustomStringConvertibleP", "isInfinite"]
- !private ["s23CustomStringConvertibleP", "isNaN"]
- !private ["s23CustomStringConvertibleP", "isZero"]
- !private ["s23CustomStringConvertibleP", "last"]
- !private ["s23CustomStringConvertibleP", "pi"]
- !private ["s23CustomStringConvertibleP", "popLast"]
- !private ["s23CustomStringConvertibleP", "subscript"]
- !private ["s23CustomStringConvertibleP", "truncatingRemainder"]
- !private ["s23CustomStringConvertibleP", "uppercased"]
- ["11DataManager9DMFormulaV", "Bool"]
- !private ["11DataManager9DMFormulaV", "CalcFunction"]
- ["11DataManager9DMFormulaV", "CalcOperator"]
- ["11DataManager9DMFormulaV", "CaseIterable"]
- ["11DataManager9DMFormulaV", "Character"]
- ["11DataManager9DMFormulaV", "Comparable"]
- ["11DataManager9DMFormulaV", "DMFormula"]
- ["11DataManager9DMFormulaV", "DMScanner"]
- ["11DataManager9DMFormulaV", "Default_ExtendedGraphemeClusterLiteralType"]
- ["11DataManager9DMFormulaV", "Default_StringLiteralType"]
- ["11DataManager9DMFormulaV", "Default_UnicodeScalarLiteralType"]
- ["11DataManager9DMFormulaV", "Double"]
- ["11DataManager9DMFormulaV", "ExtendedGraphemeClusterLiteralType"]
- ["11DataManager9DMFormulaV", "Int8"]
- ["11DataManager9DMFormulaV", "LocalizedError"]
- ["11DataManager9DMFormulaV", "NCFormulaError"]
- ["11DataManager9DMFormulaV", "String"]
- ["11DataManager9DMFormulaV", "StringLiteralType"]
- ["11DataManager9DMFormulaV", "UnicodeScalarLiteralType"]
- ["11DataManager9DMFormulaV", ""]
- ["11DataManager9DMFormulaV", "_Default_ExtendedGraphemeClusterLiteralType"]
- ["11DataManager9DMFormulaV", "_Default_StringLiteralType"]
- ["11DataManager9DMFormulaV", "_Default_UnicodeScalarLiteralType"]
- !private ["11DataManager9DMFormulaV", "_findStringSwitchCase"]
- !private ["11DataManager9DMFormulaV", "abs"]
- !private ["11DataManager9DMFormulaV", "acos"]
- !private ["11DataManager9DMFormulaV", "asin"]
- !private ["11DataManager9DMFormulaV", "atan"]
- !private ["11DataManager9DMFormulaV", "atan2"]
- ["11DataManager9DMFormulaV", "calc"]
- !private ["11DataManager9DMFormulaV", "ceil"]
- !private ["11DataManager9DMFormulaV", "cos"]
- !private ["11DataManager9DMFormulaV", "currentOp"]
- !private ["11DataManager9DMFormulaV", "degree"]
- !private ["11DataManager9DMFormulaV", "execLastOperator"]
- !private ["11DataManager9DMFormulaV", "exp"]
- !private ["11DataManager9DMFormulaV", "findStringSwitchCase"]
- !private ["11DataManager9DMFormulaV", "floor"]
- !private ["11DataManager9DMFormulaV", "get2Values"]
- !private ["11DataManager9DMFormulaV", "getValue"]
- !private ["11DataManager9DMFormulaV", "hypot"]
- ["11DataManager9DMFormulaV", "init"]
- !private ["11DataManager9DMFormulaV", "log10"]
- !private ["11DataManager9DMFormulaV", "makeChild"]
- !private ["11DataManager9DMFormulaV", "max"]
- !private ["11DataManager9DMFormulaV", "min"]
- !private ["11DataManager9DMFormulaV", "operators"]
- !private ["11DataManager9DMFormulaV", "pow"]
- !private ["11DataManager9DMFormulaV", "pushValue"]
- !private ["11DataManager9DMFormulaV", "radian"]
- ["11DataManager9DMFormulaV", "result"]
- !private ["11DataManager9DMFormulaV", "round"]
- !private ["11DataManager9DMFormulaV", "scanOperator"]
- !private ["11DataManager9DMFormulaV", "scanValue"]
- !private ["11DataManager9DMFormulaV", "scanner"]
- !private ["11DataManager9DMFormulaV", "sin"]
- !private ["11DataManager9DMFormulaV", "sqrt"]
- ["11DataManager9DMFormulaV", "subscript"]
- !private ["11DataManager9DMFormulaV", "tan"]
- !private ["11DataManager9DMFormulaV", "values"]
- !private ["11DataManager9DMFormulaV", "variables"]
- !private ["11DataManager9DMScannerV", "dropTailSpaces"]
- !private ["11DataManager9DMScannerV", "fetchCharacter"]
- !private ["11DataManager9DMScannerV", "init"]
- !private ["11DataManager9DMScannerV", "isAtEnd"]
- !private ["11DataManager9DMScannerV", "isFirstLetter"]
- !private ["11DataManager9DMScannerV", "scanCharacter"]
- !private ["11DataManager9DMScannerV", "scanDouble"]
- !private ["11DataManager9DMScannerV", "scanParen"]
- !private ["11DataManager9DMScannerV", "scanString"]
- !private ["11DataManager9DMScannerV", "testCharacter"]
- !private ["11DataManager0aB5ErrorO", ""]
- !private ["11DataManager0aB5ErrorO", "needsNumberString"]
- !private ["10Foundation12DataProtocolP", ""]
- !private ["10Foundation12DataProtocolP", "append"]
- !private ["10Foundation12DataProtocolP", "isEmpty"]
- !private ["10Foundation12DataProtocolP", "last"]
- !private ["10Foundation12DataProtocolP", "popLast"]
- !private ["Se", "DMFormula"]
- !private ["Se", "DataManagerError"]
- !private ["Se", "Double"]
- !private ["Se", "Int"]
- !private ["Se", "append"]
- !private ["Se", "callAsFunction"]
- !private ["Se", "init"]
- !private ["Se", "isEmpty"]
- !private ["Se", "isInfinite"]
- !private ["Se", "isNaN"]
- !private ["Se", "isZero"]
- !private ["Se", "last"]
- !private ["Se", "pi"]
- !private ["Se", "popLast"]
- !private ["Se", "subscript"]
- !private ["Se", "truncatingRemainder"]
- !private ["Se", "uppercased"]
- !private ["SD", "subscript"]
- !private ["Sd", "DMFormula"]
- ["Sd", "String"]
- ["Sd", ""]
- ["Sd", "init"]
- !private ["Sd", "isInfinite"]
- !private ["Sd", "isNaN"]
- !private ["Sd", "isZero"]
- !private ["Sd", "pi"]
- !private ["Sd", "truncatingRemainder"]
- !private ["SE", "DMFormula"]
- !private ["SE", "DataManagerError"]
- !private ["SE", "Double"]
- !private ["SE", "Int"]
- !private ["SE", "append"]
- !private ["SE", "callAsFunction"]
- !private ["SE", "init"]
- !private ["SE", "isEmpty"]
- !private ["SE", "isInfinite"]
- !private ["SE", "isNaN"]
- !private ["SE", "isZero"]
- !private ["SE", "last"]
- !private ["SE", "pi"]
- !private ["SE", "popLast"]
- !private ["SE", "subscript"]
- !private ["SE", "truncatingRemainder"]
- !private ["SE", "uppercased"]
- ["SQ", "<"]
- ["SQ", "<="]
- ["SQ", "=="]
- ["SQ", ">"]
- ["SQ", ">="]
- ["SQ", "AllCases"]
- !private ["SQ", "DMFormula"]
- !private ["SQ", "DataManagerError"]
- ["SQ", "Default_AllCases"]
- ["SQ", "Default_RawValue"]
- !private ["SQ", "Double"]
- !private ["SQ", "Int"]
- ["SQ", "RawValue"]
- ["SQ", ""]
- ["SQ", "_Default_AllCases"]
- ["SQ", "_Default_RawValue"]
- ["SQ", "_code"]
- ["SQ", "_domain"]
- !private ["SQ", "_findStringSwitchCase"]
- ["SQ", "_rawHashValue"]
- ["SQ", "_userInfo"]
- !private ["SQ", "abs"]
- !private ["SQ", "acos"]
- ["SQ", "allCases"]
- !private ["SQ", "append"]
- !private ["SQ", "asin"]
- !private ["SQ", "atan"]
- !private ["SQ", "atan2"]
- !private ["SQ", "callAsFunction"]
- !private ["SQ", "ceil"]
- ["SQ", "code"]
- !private ["SQ", "cos"]
- !private ["SQ", "degree"]
- ["SQ", "div"]
- ["SQ", "dividedBy0"]
- ["SQ", "domain"]
- ["SQ", "emptyParen"]
- ["SQ", "errorDescription"]
- !private ["SQ", "exec"]
- !private ["SQ", "exp"]
- ["SQ", "failureReason"]
- !private ["SQ", "findStringSwitchCase"]
- !private ["SQ", "floor"]
- ["SQ", "func_abs"]
- ["SQ", "func_acos"]
- ["SQ", "func_asin"]
- ["SQ", "func_atan"]
- ["SQ", "func_atan2"]
- ["SQ", "func_ceil"]
- ["SQ", "func_cos"]
- ["SQ", "func_exp"]
- ["SQ", "func_floor"]
- ["SQ", "func_hypot"]
- ["SQ", "func_log"]
- ["SQ", "func_max"]
- ["SQ", "func_min"]
- ["SQ", "func_pow"]
- ["SQ", "func_round"]
- ["SQ", "func_sin"]
- ["SQ", "func_sqrt"]
- ["SQ", "func_tan"]
- !private ["SQ", "get2Values"]
- !private ["SQ", "getValue"]
- ["SQ", "hash"]
- ["SQ", "hashValue"]
- ["SQ", "helpAnchor"]
- !private ["SQ", "hypot"]
- ["SQ", "init"]
- ["SQ", "internalError"]
- ["SQ", "invalueResult"]
- !private ["SQ", "isEmpty"]
- !private ["SQ", "isFirstOp"]
- !private ["SQ", "isInfinite"]
- !private ["SQ", "isNaN"]
- !private ["SQ", "isZero"]
- !private ["SQ", "last"]
- !private ["SQ", "log10"]
- !private ["SQ", "map"]
- !private ["SQ", "max"]
- !private ["SQ", "min"]
- ["SQ", "minus"]
- ["SQ", "mod"]
- ["SQ", "mul"]
- !private ["SQ", "needsNumberString"]
- ["SQ", "noOperator"]
- ["SQ", "noValue"]
- !private ["SQ", "pi"]
- ["SQ", "plus"]
- !private ["SQ", "popLast"]
- !private ["SQ", "pow"]
- !private ["SQ", "priority"]
- !private ["SQ", "radian"]
- ["SQ", "rawValue"]
- ["SQ", "recoverySuggestion"]
- !private ["SQ", "round"]
- !private ["SQ", "sin"]
- !private ["SQ", "sqrt"]
- !private ["SQ", "subscript"]
- !private ["SQ", "tan"]
- !private ["SQ", "truncatingRemainder"]
- !private ["SQ", "uppercased"]
- ["SQ", "userInfo"]
- ["s5ErrorP", "=="]
- ["s5ErrorP", ""]
- ["s5ErrorP", "_code"]
- ["s5ErrorP", "_domain"]
- ["s5ErrorP", "_rawHashValue"]
- ["s5ErrorP", "_userInfo"]
- ["s5ErrorP", "code"]
- ["s5ErrorP", "dividedBy0"]
- ["s5ErrorP", "domain"]
- ["s5ErrorP", "emptyParen"]
- ["s5ErrorP", "errorDescription"]
- ["s5ErrorP", "failureReason"]
- ["s5ErrorP", "hash"]
- ["s5ErrorP", "hashValue"]
- ["s5ErrorP", "helpAnchor"]
- ["s5ErrorP", "internalError"]
- ["s5ErrorP", "invalueResult"]
- !private ["s5ErrorP", "needsNumberString"]
- ["s5ErrorP", "noOperator"]
- ["s5ErrorP", "noValue"]
- ["s5ErrorP", "recoverySuggestion"]
- ["s5ErrorP", "userInfo"]
- !private ["s25ExpressibleByArrayLiteralP", ""]
- !private ["s25ExpressibleByArrayLiteralP", "append"]
- ["s25ExpressibleByArrayLiteralP", "init"]
- !private ["s25ExpressibleByArrayLiteralP", "isEmpty"]
- !private ["s25ExpressibleByArrayLiteralP", "last"]
- !private ["s25ExpressibleByArrayLiteralP", "popLast"]
- ["s30ExpressibleByDictionaryLiteralP", "Key"]
- ["s30ExpressibleByDictionaryLiteralP", "Value"]
- ["s30ExpressibleByDictionaryLiteralP", "init"]
- !private ["s30ExpressibleByDictionaryLiteralP", "subscript"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "CalcFunction"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "CalcOperator"]
- ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "Comparable"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "DMFormula"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "DMScanner"]
- ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "Default_ExtendedGraphemeClusterLiteralType"]
- ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "Default_StringLiteralType"]
- ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "Default_UnicodeScalarLiteralType"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "Double"]
- ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "ExtendedGraphemeClusterLiteralType"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "NCFormulaError"]
- ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "StringLiteralType"]
- ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "UnicodeScalarLiteralType"]
- ["s43ExpressibleByExtendedGraphemeClusterLiteralP", ""]
- ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "_Default_ExtendedGraphemeClusterLiteralType"]
- ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "_Default_StringLiteralType"]
- ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "_Default_UnicodeScalarLiteralType"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "_findStringSwitchCase"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "abs"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "acos"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "asin"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "atan"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "atan2"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "calc"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "callAsFunction"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "ceil"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "cos"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "degree"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "execLastOperator"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "exp"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "findStringSwitchCase"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "floor"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "get2Values"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "getValue"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "hypot"]
- ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "init"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "isEmpty"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "log10"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "makeChild"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "max"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "min"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "operators"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "pow"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "pushValue"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "radian"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "result"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "round"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "scanOperator"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "scanValue"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "scanner"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "sin"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "sqrt"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "subscript"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "tan"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "uppercased"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "values"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "variables"]
- !private ["s25ExpressibleByFloatLiteralP", "DMFormula"]
- !private ["s25ExpressibleByFloatLiteralP", ""]
- !private ["s25ExpressibleByFloatLiteralP", "init"]
- !private ["s25ExpressibleByFloatLiteralP", "isInfinite"]
- !private ["s25ExpressibleByFloatLiteralP", "isNaN"]
- !private ["s25ExpressibleByFloatLiteralP", "isZero"]
- !private ["s25ExpressibleByFloatLiteralP", "pi"]
- !private ["s25ExpressibleByFloatLiteralP", "truncatingRemainder"]
- !private ["s27ExpressibleByIntegerLiteralP", "DMFormula"]
- !private ["s27ExpressibleByIntegerLiteralP", "DataManagerError"]
- !private ["s27ExpressibleByIntegerLiteralP", "Double"]
- !private ["s27ExpressibleByIntegerLiteralP", "Int"]
- !private ["s27ExpressibleByIntegerLiteralP", ""]
- !private ["s27ExpressibleByIntegerLiteralP", "init"]
- !private ["s27ExpressibleByIntegerLiteralP", "isInfinite"]
- !private ["s27ExpressibleByIntegerLiteralP", "isNaN"]
- !private ["s27ExpressibleByIntegerLiteralP", "isZero"]
- !private ["s27ExpressibleByIntegerLiteralP", "pi"]
- !private ["s27ExpressibleByIntegerLiteralP", "truncatingRemainder"]
- !private ["s32ExpressibleByStringInterpolationP", ""]
- !private ["s32ExpressibleByStringInterpolationP", "callAsFunction"]
- !private ["s32ExpressibleByStringInterpolationP", "isEmpty"]
- !private ["s32ExpressibleByStringInterpolationP", "uppercased"]
- !private ["s26ExpressibleByStringLiteralP", "CalcFunction"]
- !private ["s26ExpressibleByStringLiteralP", "CalcOperator"]
- ["s26ExpressibleByStringLiteralP", "Comparable"]
- !private ["s26ExpressibleByStringLiteralP", "DMFormula"]
- !private ["s26ExpressibleByStringLiteralP", "DMScanner"]
- ["s26ExpressibleByStringLiteralP", "Default_ExtendedGraphemeClusterLiteralType"]
- ["s26ExpressibleByStringLiteralP", "Default_StringLiteralType"]
- ["s26ExpressibleByStringLiteralP", "Default_UnicodeScalarLiteralType"]
- !private ["s26ExpressibleByStringLiteralP", "Double"]
- ["s26ExpressibleByStringLiteralP", "ExtendedGraphemeClusterLiteralType"]
- !private ["s26ExpressibleByStringLiteralP", "NCFormulaError"]
- ["s26ExpressibleByStringLiteralP", "StringLiteralType"]
- ["s26ExpressibleByStringLiteralP", "UnicodeScalarLiteralType"]
- ["s26ExpressibleByStringLiteralP", ""]
- ["s26ExpressibleByStringLiteralP", "_Default_ExtendedGraphemeClusterLiteralType"]
- ["s26ExpressibleByStringLiteralP", "_Default_StringLiteralType"]
- ["s26ExpressibleByStringLiteralP", "_Default_UnicodeScalarLiteralType"]
- !private ["s26ExpressibleByStringLiteralP", "_findStringSwitchCase"]
- !private ["s26ExpressibleByStringLiteralP", "abs"]
- !private ["s26ExpressibleByStringLiteralP", "acos"]
- !private ["s26ExpressibleByStringLiteralP", "asin"]
- !private ["s26ExpressibleByStringLiteralP", "atan"]
- !private ["s26ExpressibleByStringLiteralP", "atan2"]
- !private ["s26ExpressibleByStringLiteralP", "calc"]
- !private ["s26ExpressibleByStringLiteralP", "callAsFunction"]
- !private ["s26ExpressibleByStringLiteralP", "ceil"]
- !private ["s26ExpressibleByStringLiteralP", "cos"]
- !private ["s26ExpressibleByStringLiteralP", "degree"]
- !private ["s26ExpressibleByStringLiteralP", "execLastOperator"]
- !private ["s26ExpressibleByStringLiteralP", "exp"]
- !private ["s26ExpressibleByStringLiteralP", "findStringSwitchCase"]
- !private ["s26ExpressibleByStringLiteralP", "floor"]
- !private ["s26ExpressibleByStringLiteralP", "get2Values"]
- !private ["s26ExpressibleByStringLiteralP", "getValue"]
- !private ["s26ExpressibleByStringLiteralP", "hypot"]
- ["s26ExpressibleByStringLiteralP", "init"]
- !private ["s26ExpressibleByStringLiteralP", "isEmpty"]
- !private ["s26ExpressibleByStringLiteralP", "log10"]
- !private ["s26ExpressibleByStringLiteralP", "makeChild"]
- !private ["s26ExpressibleByStringLiteralP", "max"]
- !private ["s26ExpressibleByStringLiteralP", "min"]
- !private ["s26ExpressibleByStringLiteralP", "operators"]
- !private ["s26ExpressibleByStringLiteralP", "pow"]
- !private ["s26ExpressibleByStringLiteralP", "pushValue"]
- !private ["s26ExpressibleByStringLiteralP", "radian"]
- !private ["s26ExpressibleByStringLiteralP", "result"]
- !private ["s26ExpressibleByStringLiteralP", "round"]
- !private ["s26ExpressibleByStringLiteralP", "scanOperator"]
- !private ["s26ExpressibleByStringLiteralP", "scanValue"]
- !private ["s26ExpressibleByStringLiteralP", "scanner"]
- !private ["s26ExpressibleByStringLiteralP", "sin"]
- !private ["s26ExpressibleByStringLiteralP", "sqrt"]
- !private ["s26ExpressibleByStringLiteralP", "subscript"]
- !private ["s26ExpressibleByStringLiteralP", "tan"]
- !private ["s26ExpressibleByStringLiteralP", "uppercased"]
- !private ["s26ExpressibleByStringLiteralP", "values"]
- !private ["s26ExpressibleByStringLiteralP", "variables"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "CalcFunction"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "CalcOperator"]
- ["s33ExpressibleByUnicodeScalarLiteralP", "Comparable"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "DMFormula"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "DMScanner"]
- ["s33ExpressibleByUnicodeScalarLiteralP", "Default_ExtendedGraphemeClusterLiteralType"]
- ["s33ExpressibleByUnicodeScalarLiteralP", "Default_StringLiteralType"]
- ["s33ExpressibleByUnicodeScalarLiteralP", "Default_UnicodeScalarLiteralType"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "Double"]
- ["s33ExpressibleByUnicodeScalarLiteralP", "ExtendedGraphemeClusterLiteralType"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "NCFormulaError"]
- ["s33ExpressibleByUnicodeScalarLiteralP", "StringLiteralType"]
- ["s33ExpressibleByUnicodeScalarLiteralP", "UnicodeScalarLiteralType"]
- ["s33ExpressibleByUnicodeScalarLiteralP", ""]
- ["s33ExpressibleByUnicodeScalarLiteralP", "_Default_ExtendedGraphemeClusterLiteralType"]
- ["s33ExpressibleByUnicodeScalarLiteralP", "_Default_StringLiteralType"]
- ["s33ExpressibleByUnicodeScalarLiteralP", "_Default_UnicodeScalarLiteralType"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "_findStringSwitchCase"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "abs"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "acos"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "asin"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "atan"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "atan2"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "calc"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "callAsFunction"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "ceil"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "cos"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "degree"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "execLastOperator"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "exp"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "findStringSwitchCase"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "floor"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "get2Values"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "getValue"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "hypot"]
- ["s33ExpressibleByUnicodeScalarLiteralP", "init"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "isEmpty"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "log10"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "makeChild"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "max"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "min"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "operators"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "pow"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "pushValue"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "radian"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "result"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "round"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "scanOperator"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "scanValue"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "scanner"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "sin"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "sqrt"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "subscript"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "tan"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "uppercased"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "values"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "variables"]
- !private ["s17FixedWidthIntegerP", "DataManagerError"]
- !private ["s17FixedWidthIntegerP", "Double"]
- !private ["s17FixedWidthIntegerP", "Int"]
- !private ["s17FixedWidthIntegerP", "init"]
- !private ["SF", "DMFormula"]
- !private ["SF", ""]
- !private ["SF", "init"]
- !private ["SF", "isInfinite"]
- !private ["SF", "isNaN"]
- !private ["SF", "isZero"]
- !private ["SF", "pi"]
- !private ["SF", "truncatingRemainder"]
- ["SH", "<"]
- ["SH", "<="]
- ["SH", "=="]
- ["SH", ">"]
- ["SH", ">="]
- ["SH", "AllCases"]
- !private ["SH", "DMFormula"]
- !private ["SH", "DataManagerError"]
- ["SH", "Default_AllCases"]
- ["SH", "Default_RawValue"]
- !private ["SH", "Double"]
- !private ["SH", "Int"]
- ["SH", "RawValue"]
- ["SH", ""]
- ["SH", "_Default_AllCases"]
- ["SH", "_Default_RawValue"]
- ["SH", "_code"]
- ["SH", "_domain"]
- !private ["SH", "_findStringSwitchCase"]
- ["SH", "_rawHashValue"]
- ["SH", "_userInfo"]
- !private ["SH", "abs"]
- !private ["SH", "acos"]
- ["SH", "allCases"]
- !private ["SH", "append"]
- !private ["SH", "asin"]
- !private ["SH", "atan"]
- !private ["SH", "atan2"]
- !private ["SH", "callAsFunction"]
- !private ["SH", "ceil"]
- ["SH", "code"]
- !private ["SH", "cos"]
- !private ["SH", "degree"]
- ["SH", "div"]
- ["SH", "dividedBy0"]
- ["SH", "domain"]
- ["SH", "emptyParen"]
- ["SH", "errorDescription"]
- !private ["SH", "exec"]
- !private ["SH", "exp"]
- ["SH", "failureReason"]
- !private ["SH", "findStringSwitchCase"]
- !private ["SH", "floor"]
- ["SH", "func_abs"]
- ["SH", "func_acos"]
- ["SH", "func_asin"]
- ["SH", "func_atan"]
- ["SH", "func_atan2"]
- ["SH", "func_ceil"]
- ["SH", "func_cos"]
- ["SH", "func_exp"]
- ["SH", "func_floor"]
- ["SH", "func_hypot"]
- ["SH", "func_log"]
- ["SH", "func_max"]
- ["SH", "func_min"]
- ["SH", "func_pow"]
- ["SH", "func_round"]
- ["SH", "func_sin"]
- ["SH", "func_sqrt"]
- ["SH", "func_tan"]
- !private ["SH", "get2Values"]
- !private ["SH", "getValue"]
- ["SH", "hash"]
- ["SH", "hashValue"]
- ["SH", "helpAnchor"]
- !private ["SH", "hypot"]
- ["SH", "init"]
- ["SH", "internalError"]
- ["SH", "invalueResult"]
- !private ["SH", "isEmpty"]
- !private ["SH", "isFirstOp"]
- !private ["SH", "isInfinite"]
- !private ["SH", "isNaN"]
- !private ["SH", "isZero"]
- !private ["SH", "last"]
- !private ["SH", "log10"]
- !private ["SH", "map"]
- !private ["SH", "max"]
- !private ["SH", "min"]
- ["SH", "minus"]
- ["SH", "mod"]
- ["SH", "mul"]
- ["SH", "noOperator"]
- ["SH", "noValue"]
- !private ["SH", "pi"]
- ["SH", "plus"]
- !private ["SH", "popLast"]
- !private ["SH", "pow"]
- !private ["SH", "priority"]
- !private ["SH", "radian"]
- ["SH", "rawValue"]
- ["SH", "recoverySuggestion"]
- !private ["SH", "round"]
- !private ["SH", "sin"]
- !private ["SH", "sqrt"]
- !private ["SH", "subscript"]
- !private ["SH", "tan"]
- !private ["SH", "truncatingRemainder"]
- !private ["SH", "uppercased"]
- ["SH", "userInfo"]
- !private ["s6HasherV", "combine"]
- !private ["Si", "DataManagerError"]
- !private ["Si", "Double"]
- !private ["Si", "Int"]
- ["Si", "String"]
- ["Si", ""]
- ["Si", "init"]
- ["10Foundation14LocalizedErrorP", "=="]
- ["10Foundation14LocalizedErrorP", ""]
- ["10Foundation14LocalizedErrorP", "_code"]
- ["10Foundation14LocalizedErrorP", "_domain"]
- ["10Foundation14LocalizedErrorP", "_rawHashValue"]
- ["10Foundation14LocalizedErrorP", "_userInfo"]
- ["10Foundation14LocalizedErrorP", "code"]
- ["10Foundation14LocalizedErrorP", "dividedBy0"]
- ["10Foundation14LocalizedErrorP", "domain"]
- ["10Foundation14LocalizedErrorP", "emptyParen"]
- ["10Foundation14LocalizedErrorP", "errorDescription"]
- ["10Foundation14LocalizedErrorP", "failureReason"]
- ["10Foundation14LocalizedErrorP", "hash"]
- ["10Foundation14LocalizedErrorP", "hashValue"]
- ["10Foundation14LocalizedErrorP", "helpAnchor"]
- ["10Foundation14LocalizedErrorP", "internalError"]
- ["10Foundation14LocalizedErrorP", "invalueResult"]
- !private ["10Foundation14LocalizedErrorP", "needsNumberString"]
- ["10Foundation14LocalizedErrorP", "noOperator"]
- ["10Foundation14LocalizedErrorP", "noValue"]
- ["10Foundation14LocalizedErrorP", "recoverySuggestion"]
- ["10Foundation14LocalizedErrorP", "userInfo"]
- !private ["s25LosslessStringConvertibleP", "DMFormula"]
- !private ["s25LosslessStringConvertibleP", "DataManagerError"]
- !private ["s25LosslessStringConvertibleP", "Double"]
- !private ["s25LosslessStringConvertibleP", "Int"]
- !private ["s25LosslessStringConvertibleP", ""]
- !private ["s25LosslessStringConvertibleP", "callAsFunction"]
- !private ["s25LosslessStringConvertibleP", "init"]
- !private ["s25LosslessStringConvertibleP", "isEmpty"]
- !private ["s25LosslessStringConvertibleP", "isInfinite"]
- !private ["s25LosslessStringConvertibleP", "isNaN"]
- !private ["s25LosslessStringConvertibleP", "isZero"]
- !private ["s25LosslessStringConvertibleP", "pi"]
- !private ["s25LosslessStringConvertibleP", "truncatingRemainder"]
- !private ["s25LosslessStringConvertibleP", "uppercased"]
- !private ["s10MirrorPathP", "DataManagerError"]
- !private ["s10MirrorPathP", "Double"]
- !private ["s10MirrorPathP", "Int"]
- !private ["s10MirrorPathP", "callAsFunction"]
- !private ["s10MirrorPathP", "init"]
- !private ["s10MirrorPathP", "isEmpty"]
- !private ["s10MirrorPathP", "uppercased"]
- !private ["SM", ""]
- !private ["SM", "append"]
- !private ["SM", "isEmpty"]
- !private ["SM", "last"]
- !private ["SM", "popLast"]
- !private ["10Foundation19MutableDataProtocolP", "append"]
- !private ["10Foundation19MutableDataProtocolP", "isEmpty"]
- !private ["10Foundation19MutableDataProtocolP", "last"]
- !private ["10Foundation19MutableDataProtocolP", "popLast"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "=="]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "String"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", ""]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "__derived_enum_equals"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "_code"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "_domain"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "_rawHashValue"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "_userInfo"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "code"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "dividedBy0"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "domain"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "emptyParen"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "errorDescription"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "failureReason"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "hash"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "hashValue"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "helpAnchor"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "internalError"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "invalueResult"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "noOperator"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "noValue"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "recoverySuggestion"]
- ["11DataManager9DMFormulaV14NCFormulaErrorO", "userInfo"]
- !private ["10Foundation8NSCodingP", ""]
- !private ["10Foundation8NSCodingP", "isEmpty"]
- !private ["10Foundation8NSCodingP", "uppercased"]
- !private ["10Foundation9NSCopyingP", "isEmpty"]
- !private ["10Foundation9NSCopyingP", "uppercased"]
- !private ["10Foundation16NSMutableCopyingP", "isEmpty"]
- !private ["10Foundation16NSMutableCopyingP", "uppercased"]
- !private ["10Foundation8NSObjectC", "isEmpty"]
- !private ["10Foundation8NSObjectC", "uppercased"]
- !private ["10Foundation16NSObjectProtocolP", "isEmpty"]
- !private ["10Foundation16NSObjectProtocolP", "uppercased"]
- !private ["10Foundation14NSSecureCodingP", "isEmpty"]
- !private ["10Foundation14NSSecureCodingP", "uppercased"]
- !private ["10Foundation8NSStringC", "isEmpty"]
- !private ["10Foundation8NSStringC", "uppercased"]
- !private ["Sj", "DMFormula"]
- !private ["Sj", "DataManagerError"]
- !private ["Sj", "Double"]
- !private ["Sj", "Int"]
- !private ["Sj", ""]
- !private ["Sj", "init"]
- !private ["Sj", "isInfinite"]
- !private ["Sj", "isNaN"]
- !private ["Sj", "isZero"]
- !private ["Sj", "pi"]
- !private ["Sj", "truncatingRemainder"]
- !private ["Sk", ""]
- !private ["Sk", "append"]
- !private ["Sk", "dropTailSpaces"]
- !private ["Sk", "fetchCharacter"]
- !private ["Sk", "init"]
- !private ["Sk", "isAtEnd"]
- !private ["Sk", "isEmpty"]
- !private ["Sk", "isFirstLetter"]
- !private ["Sk", "last"]
- !private ["Sk", "popLast"]
- !private ["Sk", "scanCharacter"]
- !private ["Sk", "scanDouble"]
- !private ["Sk", "scanParen"]
- !private ["Sk", "scanString"]
- !private ["Sk", "testCharacter"]
- !private ["Sm", ""]
- !private ["Sm", "append"]
- !private ["Sm", "callAsFunction"]
- !private ["Sm", "isEmpty"]
- !private ["Sm", "last"]
- !private ["Sm", "popLast"]
- !private ["Sm", "uppercased"]
- ["SY", "<"]
- ["SY", "<="]
- ["SY", "=="]
- ["SY", ">"]
- ["SY", ">="]
- ["SY", "AllCases"]
- ["SY", "Default_AllCases"]
- ["SY", "Default_RawValue"]
- ["SY", "RawValue"]
- !private ["SY", ""]
- ["SY", "_Default_AllCases"]
- ["SY", "_Default_RawValue"]
- !private ["SY", "_findStringSwitchCase"]
- ["SY", "_rawHashValue"]
- !private ["SY", "abs"]
- !private ["SY", "acos"]
- ["SY", "allCases"]
- !private ["SY", "asin"]
- !private ["SY", "atan"]
- !private ["SY", "atan2"]
- !private ["SY", "ceil"]
- !private ["SY", "cos"]
- !private ["SY", "degree"]
- ["SY", "div"]
- !private ["SY", "exec"]
- !private ["SY", "exp"]
- !private ["SY", "findStringSwitchCase"]
- !private ["SY", "floor"]
- ["SY", "func_abs"]
- ["SY", "func_acos"]
- ["SY", "func_asin"]
- ["SY", "func_atan"]
- ["SY", "func_atan2"]
- ["SY", "func_ceil"]
- ["SY", "func_cos"]
- ["SY", "func_exp"]
- ["SY", "func_floor"]
- ["SY", "func_hypot"]
- ["SY", "func_log"]
- ["SY", "func_max"]
- ["SY", "func_min"]
- ["SY", "func_pow"]
- ["SY", "func_round"]
- ["SY", "func_sin"]
- ["SY", "func_sqrt"]
- ["SY", "func_tan"]
- !private ["SY", "get2Values"]
- !private ["SY", "getValue"]
- ["SY", "hash"]
- ["SY", "hashValue"]
- !private ["SY", "hypot"]
- ["SY", "init"]
- !private ["SY", "isFirstOp"]
- !private ["SY", "log10"]
- !private ["SY", "map"]
- !private ["SY", "max"]
- !private ["SY", "min"]
- ["SY", "minus"]
- ["SY", "mod"]
- ["SY", "mul"]
- ["SY", "plus"]
- !private ["SY", "pow"]
- !private ["SY", "priority"]
- !private ["SY", "radian"]
- ["SY", "rawValue"]
- !private ["SY", "round"]
- !private ["SY", "sin"]
- !private ["SY", "sqrt"]
- !private ["SY", "tan"]
- !private ["s10SIMDScalarP", "DMFormula"]
- !private ["s10SIMDScalarP", "DataManagerError"]
- !private ["s10SIMDScalarP", "Double"]
- !private ["s10SIMDScalarP", "Int"]
- !private ["s10SIMDScalarP", "init"]
- !private ["s10SIMDScalarP", "isInfinite"]
- !private ["s10SIMDScalarP", "isNaN"]
- !private ["s10SIMDScalarP", "isZero"]
- !private ["s10SIMDScalarP", "pi"]
- !private ["s10SIMDScalarP", "truncatingRemainder"]
- !private ["ST", "Element"]
- !private ["ST", "Iterator"]
- ["ST", ""]
- !private ["ST", "append"]
- !private ["ST", "callAsFunction"]
- !private ["ST", "dropTailSpaces"]
- !private ["ST", "fetchCharacter"]
- !private ["ST", "init"]
- !private ["ST", "isAtEnd"]
- !private ["ST", "isEmpty"]
- !private ["ST", "isFirstLetter"]
- !private ["ST", "last"]
- !private ["ST", "popLast"]
- !private ["ST", "scanCharacter"]
- !private ["ST", "scanDouble"]
- !private ["ST", "scanParen"]
- !private ["ST", "scanString"]
- !private ["ST", "subscript"]
- !private ["ST", "testCharacter"]
- !private ["ST", "uppercased"]
- !private ["SZ", "DataManagerError"]
- !private ["SZ", "Double"]
- !private ["SZ", "Int"]
- !private ["SZ", "init"]
- !private ["s13SignedNumericP", "DMFormula"]
- !private ["s13SignedNumericP", "DataManagerError"]
- !private ["s13SignedNumericP", "Double"]
- !private ["s13SignedNumericP", "Int"]
- !private ["s13SignedNumericP", ""]
- !private ["s13SignedNumericP", "init"]
- !private ["s13SignedNumericP", "isInfinite"]
- !private ["s13SignedNumericP", "isNaN"]
- !private ["s13SignedNumericP", "isZero"]
- !private ["s13SignedNumericP", "pi"]
- !private ["s13SignedNumericP", "truncatingRemainder"]
- !private ["Sx", "DMFormula"]
- !private ["Sx", "DataManagerError"]
- !private ["Sx", "Double"]
- !private ["Sx", "Int"]
- !private ["Sx", ""]
- !private ["Sx", "init"]
- !private ["Sx", "isInfinite"]
- !private ["Sx", "isNaN"]
- !private ["Sx", "isZero"]
- !private ["Sx", "pi"]
- !private ["Sx", "truncatingRemainder"]
- !private ["SS", "callAsFunction"]
- !private ["SS", "isEmpty"]
- !private ["SS", "uppercased"]
- !private ["Sy", "callAsFunction"]
- !private ["Sy", "isEmpty"]
- !private ["Sy", "uppercased"]
- !private ["s16TextOutputStreamP", ""]
- !private ["s16TextOutputStreamP", "callAsFunction"]
- !private ["s16TextOutputStreamP", "isEmpty"]
- !private ["s16TextOutputStreamP", "uppercased"]
- !private ["s20TextOutputStreamableP", "DMFormula"]
- !private ["s20TextOutputStreamableP", ""]
- !private ["s20TextOutputStreamableP", "callAsFunction"]
- !private ["s20TextOutputStreamableP", "init"]
- !private ["s20TextOutputStreamableP", "isEmpty"]
- !private ["s20TextOutputStreamableP", "isInfinite"]
- !private ["s20TextOutputStreamableP", "isNaN"]
- !private ["s20TextOutputStreamableP", "isZero"]
- !private ["s20TextOutputStreamableP", "pi"]
- !private ["s20TextOutputStreamableP", "truncatingRemainder"]
- !private ["s20TextOutputStreamableP", "uppercased"]
- !private ["s14_ArrayProtocolP", "append"]
- !private ["s14_ArrayProtocolP", "isEmpty"]
- !private ["s14_ArrayProtocolP", "last"]
- !private ["s14_ArrayProtocolP", "popLast"]
- !private ["10Foundation13_CFBridgeableP", "append"]
- !private ["10Foundation13_CFBridgeableP", "callAsFunction"]
- !private ["10Foundation13_CFBridgeableP", "isEmpty"]
- !private ["10Foundation13_CFBridgeableP", "last"]
- !private ["10Foundation13_CFBridgeableP", "popLast"]
- !private ["10Foundation13_CFBridgeableP", "subscript"]
- !private ["10Foundation13_CFBridgeableP", "uppercased"]
- !private ["s15_CVarArgAlignedP", "DMFormula"]
- !private ["s15_CVarArgAlignedP", "init"]
- !private ["s15_CVarArgAlignedP", "isInfinite"]
- !private ["s15_CVarArgAlignedP", "isNaN"]
- !private ["s15_CVarArgAlignedP", "isZero"]
- !private ["s15_CVarArgAlignedP", "pi"]
- !private ["s15_CVarArgAlignedP", "truncatingRemainder"]
- !private ["s22_CVarArgPassedAsDoubleP", "DMFormula"]
- !private ["s22_CVarArgPassedAsDoubleP", "init"]
- !private ["s22_CVarArgPassedAsDoubleP", "isInfinite"]
- !private ["s22_CVarArgPassedAsDoubleP", "isNaN"]
- !private ["s22_CVarArgPassedAsDoubleP", "isZero"]
- !private ["s22_CVarArgPassedAsDoubleP", "pi"]
- !private ["s22_CVarArgPassedAsDoubleP", "truncatingRemainder"]
- !private ["s30_CustomPlaygroundQuickLookableP", "DMFormula"]
- !private ["s30_CustomPlaygroundQuickLookableP", "DataManagerError"]
- !private ["s30_CustomPlaygroundQuickLookableP", "Double"]
- !private ["s30_CustomPlaygroundQuickLookableP", "Int"]
- !private ["s30_CustomPlaygroundQuickLookableP", "callAsFunction"]
- !private ["s30_CustomPlaygroundQuickLookableP", "init"]
- !private ["s30_CustomPlaygroundQuickLookableP", "isEmpty"]
- !private ["s30_CustomPlaygroundQuickLookableP", "isInfinite"]
- !private ["s30_CustomPlaygroundQuickLookableP", "isNaN"]
- !private ["s30_CustomPlaygroundQuickLookableP", "isZero"]
- !private ["s30_CustomPlaygroundQuickLookableP", "pi"]
- !private ["s30_CustomPlaygroundQuickLookableP", "truncatingRemainder"]
- !private ["s30_CustomPlaygroundQuickLookableP", "uppercased"]
- !private ["s24_DestructorSafeContainerP", "append"]
- !private ["s24_DestructorSafeContainerP", "isEmpty"]
- !private ["s24_DestructorSafeContainerP", "last"]
- !private ["s24_DestructorSafeContainerP", "popLast"]
- !private ["s35_ExpressibleByBuiltinBooleanLiteralP", "init"]
- ["s51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP", ""]
- !private ["s51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP", "callAsFunction"]
- ["s51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP", "init"]
- !private ["s51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP", "isEmpty"]
- !private ["s51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP", "uppercased"]
- !private ["s33_ExpressibleByBuiltinFloatLiteralP", "DMFormula"]
- !private ["s33_ExpressibleByBuiltinFloatLiteralP", "init"]
- !private ["s33_ExpressibleByBuiltinFloatLiteralP", "isInfinite"]
- !private ["s33_ExpressibleByBuiltinFloatLiteralP", "isNaN"]
- !private ["s33_ExpressibleByBuiltinFloatLiteralP", "isZero"]
- !private ["s33_ExpressibleByBuiltinFloatLiteralP", "pi"]
- !private ["s33_ExpressibleByBuiltinFloatLiteralP", "truncatingRemainder"]
- !private ["s35_ExpressibleByBuiltinIntegerLiteralP", "DMFormula"]
- !private ["s35_ExpressibleByBuiltinIntegerLiteralP", "DataManagerError"]
- !private ["s35_ExpressibleByBuiltinIntegerLiteralP", "Double"]
- !private ["s35_ExpressibleByBuiltinIntegerLiteralP", "Int"]
- ["s35_ExpressibleByBuiltinIntegerLiteralP", "init"]
- !private ["s35_ExpressibleByBuiltinIntegerLiteralP", "isInfinite"]
- !private ["s35_ExpressibleByBuiltinIntegerLiteralP", "isNaN"]
- !private ["s35_ExpressibleByBuiltinIntegerLiteralP", "isZero"]
- !private ["s35_ExpressibleByBuiltinIntegerLiteralP", "pi"]
- !private ["s35_ExpressibleByBuiltinIntegerLiteralP", "truncatingRemainder"]
- !private ["s34_ExpressibleByBuiltinStringLiteralP", "callAsFunction"]
- ["s34_ExpressibleByBuiltinStringLiteralP", "init"]
- !private ["s34_ExpressibleByBuiltinStringLiteralP", "isEmpty"]
- !private ["s34_ExpressibleByBuiltinStringLiteralP", "uppercased"]
- ["s41_ExpressibleByBuiltinUnicodeScalarLiteralP", ""]
- !private ["s41_ExpressibleByBuiltinUnicodeScalarLiteralP", "callAsFunction"]
- !private ["s41_ExpressibleByBuiltinUnicodeScalarLiteralP", "isEmpty"]
- !private ["s41_ExpressibleByBuiltinUnicodeScalarLiteralP", "uppercased"]
- !private ["s19_HasContiguousBytesP", "append"]
- !private ["s19_HasContiguousBytesP", "callAsFunction"]
- !private ["s19_HasContiguousBytesP", "isEmpty"]
- !private ["s19_HasContiguousBytesP", "last"]
- !private ["s19_HasContiguousBytesP", "popLast"]
- !private ["s19_HasContiguousBytesP", "uppercased"]
- !private ["s35_HasCustomAnyHashableRepresentationP", "DMFormula"]
- !private ["s35_HasCustomAnyHashableRepresentationP", "DataManagerError"]
- !private ["s35_HasCustomAnyHashableRepresentationP", "Double"]
- !private ["s35_HasCustomAnyHashableRepresentationP", "Int"]
- !private ["s35_HasCustomAnyHashableRepresentationP", "append"]
- !private ["s35_HasCustomAnyHashableRepresentationP", "init"]
- !private ["s35_HasCustomAnyHashableRepresentationP", "isEmpty"]
- !private ["s35_HasCustomAnyHashableRepresentationP", "isInfinite"]
- !private ["s35_HasCustomAnyHashableRepresentationP", "isNaN"]
- !private ["s35_HasCustomAnyHashableRepresentationP", "isZero"]
- !private ["s35_HasCustomAnyHashableRepresentationP", "last"]
- !private ["s35_HasCustomAnyHashableRepresentationP", "pi"]
- !private ["s35_HasCustomAnyHashableRepresentationP", "popLast"]
- !private ["s35_HasCustomAnyHashableRepresentationP", "subscript"]
- !private ["s35_HasCustomAnyHashableRepresentationP", "truncatingRemainder"]
- !private ["10Foundation13_NSBridgeableP", "append"]
- !private ["10Foundation13_NSBridgeableP", "callAsFunction"]
- !private ["10Foundation13_NSBridgeableP", "isEmpty"]
- !private ["10Foundation13_NSBridgeableP", "last"]
- !private ["10Foundation13_NSBridgeableP", "popLast"]
- !private ["10Foundation13_NSBridgeableP", "subscript"]
- !private ["10Foundation13_NSBridgeableP", "uppercased"]
- !private ["s21_ObjectiveCBridgeableP", "DMFormula"]
- !private ["s21_ObjectiveCBridgeableP", "DataManagerError"]
- !private ["s21_ObjectiveCBridgeableP", "Double"]
- !private ["s21_ObjectiveCBridgeableP", "Int"]
- !private ["s21_ObjectiveCBridgeableP", "_ObjectiveCType"]
- !private ["s21_ObjectiveCBridgeableP", "append"]
- !private ["s21_ObjectiveCBridgeableP", "callAsFunction"]
- !private ["s21_ObjectiveCBridgeableP", "init"]
- !private ["s21_ObjectiveCBridgeableP", "isEmpty"]
- !private ["s21_ObjectiveCBridgeableP", "isInfinite"]
- !private ["s21_ObjectiveCBridgeableP", "isNaN"]
- !private ["s21_ObjectiveCBridgeableP", "isZero"]
- !private ["s21_ObjectiveCBridgeableP", "last"]
- !private ["s21_ObjectiveCBridgeableP", "pi"]
- !private ["s21_ObjectiveCBridgeableP", "popLast"]
- !private ["s21_ObjectiveCBridgeableP", "subscript"]
- !private ["s21_ObjectiveCBridgeableP", "truncatingRemainder"]
- !private ["s21_ObjectiveCBridgeableP", "uppercased"]
- !private ["10Foundation17_StructBridgeableP", ""]
- !private ["10Foundation17_StructBridgeableP", "isEmpty"]
- !private ["10Foundation17_StructBridgeableP", "uppercased"]
- !private ["10Foundation21_StructTypeBridgeableP", "isEmpty"]
- !private ["10Foundation21_StructTypeBridgeableP", "uppercased"]
- !private ["10Foundation16_SwiftBridgeableP", "isEmpty"]
- !private ["10Foundation16_SwiftBridgeableP", "uppercased"]
depends-nominal:
- !private "s18AdditiveArithmeticP"
- !private "Sa"
- !private "SK"
- !private "SB"
- !private "Sz"
- !private "s7CVarArgP"
- "s12CaseIterableP"
- !private "Sl"
- "SL"
- !private "10Foundation15ContiguousBytesP"
- !private "s28CustomDebugStringConvertibleP"
- !private "s17CustomReflectableP"
- !private "s23CustomStringConvertibleP"
- "11DataManager9DMFormulaV"
- !private "11DataManager9DMScannerV"
- !private "11DataManager0aB5ErrorO"
- !private "10Foundation12DataProtocolP"
- !private "Se"
- !private "SD"
- "Sd"
- !private "SE"
- "SQ"
- "s5ErrorP"
- "s25ExpressibleByArrayLiteralP"
- "s30ExpressibleByDictionaryLiteralP"
- "s43ExpressibleByExtendedGraphemeClusterLiteralP"
- !private "s25ExpressibleByFloatLiteralP"
- !private "s27ExpressibleByIntegerLiteralP"
- !private "s32ExpressibleByStringInterpolationP"
- "s26ExpressibleByStringLiteralP"
- "s33ExpressibleByUnicodeScalarLiteralP"
- !private "s17FixedWidthIntegerP"
- !private "SF"
- "SH"
- !private "s6HasherV"
- "Si"
- "10Foundation14LocalizedErrorP"
- !private "s25LosslessStringConvertibleP"
- !private "s10MirrorPathP"
- !private "SM"
- !private "10Foundation19MutableDataProtocolP"
- "11DataManager9DMFormulaV14NCFormulaErrorO"
- !private "10Foundation8NSCodingP"
- !private "10Foundation9NSCopyingP"
- !private "10Foundation16NSMutableCopyingP"
- !private "10Foundation8NSObjectC"
- !private "10Foundation16NSObjectProtocolP"
- !private "10Foundation14NSSecureCodingP"
- !private "10Foundation8NSStringC"
- !private "Sj"
- !private "Sk"
- !private "Sm"
- "SY"
- !private "s10SIMDScalarP"
- "ST"
- !private "SZ"
- !private "s13SignedNumericP"
- !private "Sx"
- !private "SS"
- !private "Sy"
- !private "s16TextOutputStreamP"
- !private "s20TextOutputStreamableP"
- !private "s14_ArrayProtocolP"
- !private "10Foundation13_CFBridgeableP"
- !private "s15_CVarArgAlignedP"
- !private "s22_CVarArgPassedAsDoubleP"
- !private "s30_CustomPlaygroundQuickLookableP"
- !private "s24_DestructorSafeContainerP"
- !private "s35_ExpressibleByBuiltinBooleanLiteralP"
- "s51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP"
- !private "s33_ExpressibleByBuiltinFloatLiteralP"
- "s35_ExpressibleByBuiltinIntegerLiteralP"
- "s34_ExpressibleByBuiltinStringLiteralP"
- "s41_ExpressibleByBuiltinUnicodeScalarLiteralP"
- !private "s19_HasContiguousBytesP"
- !private "s35_HasCustomAnyHashableRepresentationP"
- !private "10Foundation13_NSBridgeableP"
- !private "s21_ObjectiveCBridgeableP"
- !private "10Foundation17_StructBridgeableP"
- !private "10Foundation21_StructTypeBridgeableP"
- !private "10Foundation16_SwiftBridgeableP"
depends-dynamic-lookup:
depends-external:
- "/home/manager/usr/lib/swift/linux/x86_64/Glibc.swiftmodule"
- "/home/manager/usr/lib/swift/linux/x86_64/FoundationNetworking.swiftmodule"
- "/home/manager/usr/lib/swift/linux/x86_64/Dispatch.swiftmodule"
- "/home/manager/usr/lib/swift/linux/x86_64/Foundation.swiftmodule"
- "/home/manager/usr/lib/swift/linux/x86_64/Swift.swiftmodule"
- "/home/manager/usr/lib/swift/linux/x86_64/SwiftOnoneSupport.swiftmodule"
- "/home/manager/usr/lib/swift/linux/x86_64/glibc.modulemap"
interface-hash: "7dcbf337e25cfb4a4ebb7e660ad54575"
